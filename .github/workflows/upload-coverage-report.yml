name: Upload Coverage Report

on:
  workflow_dispatch:

jobs:
  update-coverage-report:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false
    strategy:
      matrix:
        spec:
            - .github/workflows/dotnet-windows.yml codecoverage-report-windows-net8.0-Release, codecoverage-report-windows-net481-Release
            - .github/workflows/dotnet-ubuntu.yml codecoverage-report-ubuntu-net8.0-Release
    steps:
    - name: 'Download latest successful build artifact'
      run: |
        IFS=' ' read -ra spec <<< "${{ matrix.spec }}"
        workflow_id=$(echo ${spec[0]} | xargs)
        run_id=$(gh run list -w $workflow_id --json conclusion,headBranch,databaseId --jq 'first(.[] | select(.conclusion | contains("success"))) | .databaseId')
        [ -z "$run_id" ] && echo "::error:::No successful run found for workflow '$workflow_id'" && exit 1 || true
        echo "::notice::Last successful run for workflow '$workflow_id' is '$run_id'"
        IFS=',' read -ra artifacts <<< "${spec[@]:1}"
        for i in "${artifacts[@]}"; do
          artifact_id=$(echo $i | xargs)
          artifact_subdir=$(echo $artifact_id | sed 's/codecoverage-report-//g')
          echo "::notice::Downloading '$artifact_id'"
          gh run download $run_id -n $artifact_id -D $ARTIFACTS_TMP_DIR
          unzip $ARTIFACTS_TMP_DIR/${artifact_id}.zip -d $OUTPUT_DIR/$artifact_subdir
        done
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WF_SPEC: ${{ matrix.spec }}
        ARTIFACTS_TMP_DIR: artifacts
        OUTPUT_DIR: coverage-results
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload Pages
      uses: actions/upload-pages-artifact@v3        
      with:
        path: coverage-results
    - name: Deploy Pages
      id: deployment
      uses: actions/deploy-pages@v4
